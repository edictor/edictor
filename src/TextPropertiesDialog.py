# -*- coding: utf-8 -*-
# generated by wxGlade 0.6.3 on Fri Mar 13 18:18:19 2009

import wx, intl

# begin wxGlade: dependencies
# end wxGlade

# begin wxGlade: extracode

# end wxGlade

class TextPropertiesDialog(wx.Dialog):
    def __init__(self, *args, **kwds):
        # Set app language
        intl.setLanguage()
        # begin wxGlade: TextPropertiesDialog.__init__
        kwds["style"] = wx.DEFAULT_DIALOG_STYLE
        wx.Dialog.__init__(self, *args, **kwds)
        self.label_15 = wx.StaticText(self, -1, _(u"Título:"))
        self.text_title = wx.TextCtrl(self, -1, "")
        self.label_16 = wx.StaticText(self, -1, _(u"Ano de produção:"))
        self.text_year = wx.TextCtrl(self, -1, "")
        self.label_17 = wx.StaticText(self, -1, _("Autor:"))
        self.text_author = wx.TextCtrl(self, -1, "")
        self.label_18 = wx.StaticText(self, -1, _("Ano de Nascimento:"))
        self.text_born = wx.TextCtrl(self, -1, "")
        self.label_19 = wx.StaticText(self, -1, _("Tipo:"))
        self.combo_type = wx.ComboBox(self, -1, choices=["", _("full"), _("partial")], style=wx.CB_DROPDOWN|wx.CB_READONLY|wx.CB_SORT)
        self.label_20 = wx.StaticText(self, -1, _("Palavras:"))
        self.text_words = wx.TextCtrl(self, -1, "")
        self.button_ok_copy = wx.Button(self, -1, _("Ok"))
        self.button_cancel_copy = wx.Button(self, -1, _("Cancelar"))

        self.__set_properties()
        self.__do_layout()

        self.Bind(wx.EVT_BUTTON, self.OnOkButtonClick, self.button_ok_copy)
        self.Bind(wx.EVT_BUTTON, self.OnCancelButtonClick, self.button_cancel_copy)
        # end wxGlade

        self.el = None

        self.text_title.SetFocus()
        self.Bind(wx.EVT_CHAR_HOOK, self.OnKeyDown)

    def OnKeyDown(self, event):
        keycode = event.GetKeyCode()
        if keycode == wx.WXK_ESCAPE:
            self.Close(True)
        event.Skip()

    def __set_properties(self):
        # begin wxGlade: TextPropertiesDialog.__set_properties
        self.SetTitle(_("Propriedades do Texto"))
        self.label_15.SetMinSize((115, 14))
        self.label_16.SetMinSize((115, 14))
        self.label_17.SetMinSize((115, 14))
        self.label_18.SetMinSize((115, 14))
        self.label_19.SetMinSize((115, 14))
        self.combo_type.SetSelection(-1)
        self.text_words.Enable(False)
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: TextPropertiesDialog.__do_layout
        sizer_48 = wx.BoxSizer(wx.VERTICAL)
        sizer_2_copy_copy = wx.BoxSizer(wx.HORIZONTAL)
        sizer_50 = wx.BoxSizer(wx.VERTICAL)
        sizer_55 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_50_copy = wx.BoxSizer(wx.HORIZONTAL)
        sizer_49 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_54 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_53 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_52 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_51 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_51.Add(self.label_15, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_51.Add(self.text_title, 1, wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_50.Add(sizer_51, 1, wx.EXPAND, 0)
        sizer_52.Add(self.label_16, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_52.Add(self.text_year, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_50.Add(sizer_52, 1, wx.EXPAND, 0)
        sizer_53.Add(self.label_17, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_53.Add(self.text_author, 1, wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_50.Add(sizer_53, 1, wx.EXPAND, 0)
        sizer_54.Add(self.label_18, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_54.Add(self.text_born, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_50.Add(sizer_54, 1, wx.EXPAND, 0)
        sizer_49.Add(self.label_19, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_49.Add(self.combo_type, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_55.Add(sizer_49, 1, wx.EXPAND, 0)
        sizer_50_copy.Add(self.label_20, 0, wx.LEFT|wx.RIGHT|wx.ALIGN_CENTER_VERTICAL, 5)
        sizer_50_copy.Add(self.text_words, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_55.Add(sizer_50_copy, 0, wx.EXPAND, 0)
        sizer_50.Add(sizer_55, 1, wx.EXPAND, 0)
        sizer_48.Add(sizer_50, 1, wx.ALL|wx.EXPAND, 5)
        sizer_2_copy_copy.Add(self.button_ok_copy, 1, wx.LEFT|wx.RIGHT|wx.ALIGN_CENTER_HORIZONTAL|wx.ALIGN_CENTER_VERTICAL, 30)
        sizer_2_copy_copy.Add(self.button_cancel_copy, 1, wx.LEFT|wx.RIGHT|wx.ALIGN_CENTER_HORIZONTAL|wx.ALIGN_CENTER_VERTICAL, 30)
        sizer_48.Add(sizer_2_copy_copy, 0, wx.ALL|wx.ALIGN_CENTER_HORIZONTAL, 10)
        self.SetSizer(sizer_48)
        sizer_48.Fit(self)
        self.Layout()
        # end wxGlade

    def OnOkButtonClick(self, event): # wxGlade: TextPropertiesDialog.<event_handler>
        if self.el is not None:
            # Save properties
            self.el.node.set('title', self.text_title.GetValue())
            self.el.node.set('author', self.text_author.GetValue())
            self.el.node.set('year', self.text_year.GetValue())
            self.el.node.set('born', self.text_born.GetValue())
            self.el.node.set('words', self.text_words.GetValue())
            # Type
            if self.combo_type.GetStringSelection().strip() != '':
                self.el.node.set('t',self.combo_type.GetStringSelection())
            else:
                self.el.node.set('t','')
            
            # Close window
            self.EndModal(wx.ID_OK)
        else:
            self.OnCancelButtonClick(None)
        # Close window
        self.EndModal(wx.ID_OK)

    def OnCancelButtonClick(self, event): # wxGlade: TextPropertiesDialog.<event_handler>
        self.EndModal(wx.ID_CANCEL)

    def setElement(self, el):
        if el is None:
            wx.MessageBox(_(u'Elemento é nulo.'),_(u'E-Dictor'))
            return False

        self.el = el

        # Load properties
        if el.node.get('title'):
            self.text_title.ChangeValue(el.node.get('title'))
        if el.node.get('author'):
            self.text_author.ChangeValue(el.node.get('author'))
        if el.node.get('year'):
            self.text_year.ChangeValue(el.node.get('year'))
        if el.node.get('born'):
            self.text_born.ChangeValue(el.node.get('born'))
        self.text_words.ChangeValue(str(len(el.getWordsList())))
        if el.node.get('t') is not None:
            self.combo_type.SetStringSelection(el.node.get('t'))

        return True

# end of class TextPropertiesDialog


